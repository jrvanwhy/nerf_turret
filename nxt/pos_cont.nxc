// Contains a generic position controller for NXT motors

#ifndef POS_CONT_NXC
#define POS_CONT_NXC

// Functions/tools for this controller.
#include "util.nxc" // For clamp()

// Takes in the motor to be controller,
// current voltage, and a target position
void posCont(byte motor, long tgt, long voltage) {
	// Control gain
	const long kp = 100000; // Percent millivolts per degree

	// Maximum output absolute value
	const long maxOut = 100;

	// Maximum absolute error value before the control saturates.
	long satErr = maxOut * voltage / kp;

	// Compute the positioning error. The sign of this error matches
	// the sign of the control input necessary to decrease the error.
	long error = tgt - MotorRotationCount(motor);

	// Check for error saturation, and set the maximum possible command if it's saturated.
	// Otherwise, compute the command via proportional control.
	// Checking the error prevents a possible long overflow.
	long tau;
	if (error > satErr)
		tau = maxOut;
	else if (error < -satErr)
		tau = -maxOut;
	else
		tau = clamp(kp * error / voltage, -maxOut, maxOut);

	// Write out the new command
	OnFwd(motor, tau);
}

#endif // POS_CONT_NXC

// vim: syntax=c
